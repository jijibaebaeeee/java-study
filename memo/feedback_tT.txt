
<문제> UserVO 클래스와 UserService 클래스를 선언하여 아래 요구사항에 맞춰 구현하기
- UserVO 클래스
   유저번호, 아이디, 비밀번호, 이름, 나이
   모든 필드는 private으로 선언하고 생성자를 통해서만 초기화한다
   toString() 재정의하여 모든 필드의 값을 확인할 수 있도록해야하며/ 유저 번호 값으로 객체의 동일성을 비교한다
- UserService 클래스
   회원정보를 저장할 List를 private으로 선언한다
   아이디 중복검사 메소드
   회원가입 메소드
   로그인 메소드
- Main 클래스
   객체 3개 생성, 오버라이딩 된 메소드 포함한 모든 메소드 출력

		       
--체계적으로 하지 못했던이유 : 0. 사용자로부터 값을 입력받으려고 했음.
		       1. Object 클래스의 toString()을 오버라이딩하는 것에서 선언부가 동일해야한다는 것을 간과하고 리턴타입을 void로 시작
		       2. Object 클래스의 equals()을 오버라이딩하는 것에서 리턴타입을 인지하지 못하고 시작
		       3. getter의 정확한 쓰임 순간을 알지 못했다. ★
		       4. 각 메소드에서 어떠한 매개변수를 받아야하는지 설정이 어려웠다. ★
		       5. ArrayList의 제네릭이 어떻게 UserV0 여야하는지 당시에는 알지 못했다. ★★
		       6. UserService 클래스의 ArrayList가 어떻게 객체를 담을 수 있는지 연결고리를 알 수 없었다.★★★★★★★★★★★★★★★★
		       7. UserVO의 equals()에서 비교하는 것(유저번호)과 UserService의 아이디 중복검사 메소드에서 비교하는 것(id)가 같은 것으로 인지
		       8. Main에서 어떤 객체를 만들어야하는지를 모르겠었다.
	


1. UserVO 클래스 <- 회원 정보 담는 곳
로직구성
필드의 각 이름을 private로 선언한다. -> 같은 클래스 내부에서는 이 필드에 접근이 가능하다. 외부에서 이 값에 접근하기 위해서는 getter를 사용해야함.
매개변수를 모두 가지는 생성자를 생성한다. -> this 키워드를 이용해서 필드 초기화
toString()을 오버라이딩한다. -> Object 클래스의 메소드라는 것을 잊지말고, Alt + Shift + S + V를 이용해서 오버라이딩하자.
  리턴타입 String()	   선언부는 동일해야하기 때문에 String toString() 임을 인지하자...
  매개변수 X
  구현부 -> " " + this를 이용해서 하나씩 모두 출력하기.

Object 클래스의 equals()를 오버라이딩한다.
  리턴타입 boolean
  매개변수 객체?or 객체의 id? ★
  구현부 -> if this.id와 객체.id가 같으면 return false;
	  다르면 true

equals()를 오버라이딩 했기 때문에 hashCode() 도 오버라이딩해주어야한다.
hashCode()의 어느부분을 오버라이딩할 것인가?
    return 유저번호..?



2. UserService 클래스 <- 기능 모아둔 곳

로직구성
<필드>
private ArrayList list; -> 회원정보를 저장할 list를 private으로 선언 -> 같은 클래스에서만 접근이 가능하겠구나 생각.

<메소드>
1. 아이디 중복검사 메소드
  리턴타입 : void (아직 모름) -> boolean
  메소드명 : checkId
  매개변수 : 객체?, 객체의 id값?
  구현부 : if 기존에 있던 id와 이번의 id가 같은경우 false
				  다른경우 true

2. 회원가입 메소드
  리턴타입 : void
  메소드명 : signUp
  매개변수 : 모르겠음 -> 아직도 모르겠음
  구현부 : 회원가입에 성공했는지 실패했는지의 유무?
	 if 아이디가 중복이 아니면 -> syso(회원가입에 성공했습니다)
		else -> syso(아이디가 중복입니다 다시 입력해주세요)

3. 로그인 메소드
  리턴타입 : boolean
  메소드명 : login
  매개변수 : id와 비밀번호?
  구현부 : list에 저장되어있는 객체를 하나씩 순회하면서 id와 passwd가 맞는지 확인한다.



3. 메인 클래스

UserVO 클래스의 객체를 3개 생성한다 + 생성자에 맞게 인수를 전달한다.
  각 객체를 생성할 때, 기존에 저장되어있는 id와 비교를 해야한다. -> 어떻게 ? 어떻게 UserVO 클래스의 객체와 UserService 클래스의 ArrayList와 연결할 것이냐?
							   ★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★





